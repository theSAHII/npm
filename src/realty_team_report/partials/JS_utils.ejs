<script>
  // pre-defined global functions
  const
    doc = document,
    alpha_nth = ["Zeroth", "First", "Second", "Third", "Fourth", "Fifth", "Sixth"],
    svg = {
      cross_square: `
        <svg version="1.1" 
            id="Layer_1" 
            xmlns="http://www.w3.org/2000/svg" 
            xmlns:xlink="http://www.w3.org/1999/xlink" 
            width="122.88px"
            height="122.88px"
            viewBox="0 0 122.88 122.88">
                <g>
                    <path d="M7.513,0h107.854c2.066,0,3.944,0.845,5.306,2.207s2.207,3.24,2.207,5.306v107.854c0,2.066-0.846,3.944-2.207,5.306 c-1.361,1.362-3.239,2.207-5.306,2.207H7.513c-2.066,0-3.945-0.845-5.306-2.207C0.845,119.312,0,117.434,0,115.367V7.513 c0-2.066,0.845-3.945,2.207-5.306S5.447,0,7.513,0L7.513,0z M35.018,38.629c0,0.924,0.353,1.848,1.057,2.553l20.164,20.164 l0.094,0.095l-0.094,0.094L36.075,81.698c-0.705,0.705-1.057,1.629-1.057,2.553s0.353,1.849,1.057,2.554 c0.705,0.704,1.629,1.058,2.553,1.058c0.924,0,1.848-0.354,2.553-1.058l20.163-20.164l0.095-0.095l0.095,0.095l20.163,20.164 c0.705,0.704,1.63,1.058,2.554,1.058s1.849-0.354,2.553-1.058c0.705-0.705,1.058-1.63,1.058-2.554s-0.353-1.848-1.058-2.553 L66.641,61.534l-0.095-0.094l0.095-0.095l20.163-20.164c0.705-0.705,1.058-1.629,1.058-2.553s-0.353-1.848-1.058-2.553 c-0.704-0.705-1.629-1.057-2.553-1.057s-1.849,0.353-2.554,1.057L61.534,56.239l-0.095,0.095l-0.095-0.095L41.182,36.076 c-0.705-0.705-1.629-1.057-2.553-1.057c-0.924,0-1.848,0.353-2.553,1.057C35.371,36.781,35.018,37.705,35.018,38.629L35.018,38.629 z"/>
                </g>
            </svg>`,
      check_square: `
        <svg version="1.1" 
            id="Layer_1" 
            xmlns="http://www.w3.org/2000/svg" 
            xmlns:xlink="http://www.w3.org/1999/xlink" 
            x="0px" y="0px" 
            width="122.881px" 
            height="122.88px" 
            viewBox="0 0 122.881 122.88" 
            enable-background="new 0 0 122.881 122.88" 
            xml:space="preserve">
                <g>
                    <path fill-rule="evenodd" clip-rule="evenodd" d="M7.246,0h108.389c1.992,0,3.805,0.815,5.117,2.128s2.129,3.125,2.129,5.117 v108.388c0,1.993-0.816,3.805-2.129,5.117c-1.313,1.313-3.125,2.129-5.117,2.129H7.246c-1.993,0-3.804-0.815-5.118-2.129 C0.815,119.438,0,117.627,0,115.634V7.246c0-1.993,0.815-3.804,2.128-5.117C3.442,0.815,5.253,0,7.246,0L7.246,0z M32.036,68.054 l0.011,0.01l0.006,0.006l0.012,0.01v0.001l16.98,15.397c0.399,0.361,0.852,0.629,1.329,0.803c0.496,0.181,1.018,0.261,1.536,0.241 c0.503-0.019,1.003-0.131,1.47-0.334c0.451-0.196,0.873-0.479,1.241-0.848l0.012-0.01l0.033-0.028l0.001-0.001 c0.012-0.011,0.023-0.021,0.032-0.03l36.346-38.065c0.379-0.398,0.66-0.853,0.846-1.334v0c0.193-0.5,0.281-1.033,0.27-1.561 c-0.014-0.528-0.129-1.055-0.348-1.547c-0.209-0.473-0.514-0.913-0.91-1.291L90.9,39.471c-0.396-0.378-0.852-0.66-1.334-0.845l0,0 c-0.5-0.192-1.031-0.282-1.561-0.269c-0.527,0.013-1.055,0.129-1.545,0.347c-0.473,0.209-0.912,0.513-1.291,0.91l-0.002,0.001 L51.642,74.729l-0.09,0.094l-0.097-0.087l-13.972-12.67c-0.406-0.367-0.867-0.638-1.354-0.812c-0.505-0.18-1.036-0.256-1.562-0.23 c-0.523,0.026-1.042,0.154-1.524,0.381c-0.464,0.219-0.895,0.53-1.262,0.932l-0.003,0.003c-0.007,0.007-0.016,0.017-0.024,0.026 l-0.002,0.003c-0.363,0.405-0.629,0.864-0.8,1.348c-0.178,0.501-0.253,1.029-0.227,1.552c0.026,0.523,0.153,1.042,0.379,1.523 C31.323,67.256,31.634,67.687,32.036,68.054L32.036,68.054L32.036,68.054z"/>
                </g>
            </svg>`,
    },
    _$ = (e) => doc.querySelector(e),
    _$$ = (e) => doc.querySelectorAll(e);

  // convert 2d arr to json obj
  function arr2obj(arr2D) {
    let keys = arr2D[0]
    let arr_of_obj = {}
    for (let i = 1; i < arr2D.length; i++) {
      let obj = {}
      for (let j = 0; j < keys.length; j++) {
        obj[keys[j]] = arr2D[i][j]
      }
      arr_of_obj[arr2D[i][0]] = obj
    }
    return arr_of_obj
  }

  //    HTTP REQUEST //
  async function makeRequest(type, api, data = null) {

    if (!type || !api) return

    let myHeader = new Headers()
    myHeader.append("Content-Type", "application/json")

    let requestOptions = {
      method: type,
      headers: myHeader,
      redirect: 'follow',
    }

    if (data) requestOptions.body = JSON.stringify(data)

    // console.log("req type : ", requestOptions)
    // console.log("data : ", data, typeof data)

    return new Promise((resolve, reject) => {
      return fetch(api, requestOptions)
        .then(response => response.text())
        .then(result => {
          resolve(result)
        })
        .catch(error => {
          reject('error', error)
        });
    })
  }
  //

  //    DOM
  function hideNseek(isID = 1, shouldHide = 1, arr) {
    arr = arr.filter(e => e)
    for (let id of arr) {
      if (isID && shouldHide) _$(id).classList.add("hide")
      else if (isID && !shouldHide) _$(id).classList.remove("hide")
      else if (!isID && shouldHide) id.classList.add("hide")
      else if (!isID && !shouldHide) id.classList.remove("hide")
    }
  }

  const hideIDS = (arrIDS) => hideNseek(1, 1, arrIDS),
    showIDS = (arrIDS) => hideNseek(1, 0, arrIDS),
    hideNODES = (arrIDS) => hideNseek(0, 1, arrIDS),
    showNODES = (arrIDS) => hideNseek(0, 0, arrIDS)

  // function hideIDS(arrIDS) {
  //   for (let id of arrIDS)
  //     _$(id).classList.add("hide")
  // }

  // function hideNODES(arrIDS) {
  //   for (let id of arrIDS)
  //     id.classList.add("hide")
  // }

  // function showIDS(arrIDS) {
  //   for (let id of arrIDS)
  //     _$(id).classList.remove("hide")
  // }

  // function showNODES(arrIDS) {
  //   for (let id of arrIDS)
  //     id.classList.remove("hide")
  // }

  function setText(arrIDS, arrText) {
    for (let i = 0; i < arrIDS.length; i++)
      _$(arrIDS[i]).innerText = arrText[i]
  }

  function addHTML(selector, strHTML) {
    _$(selector).innerHTML += strHTML
  }

  function notification(string) {
    showIDS(["#notification-box"])
    setText(["#notification-box"], [string])
    setTimeout(() => hideIDS(["#notification-box"]), 3000);
  }

  function enableFullscreen() {
    let elem = _$("html")
    if (elem.requestFullscreen) {
      elem.requestFullscreen();
    } else if (elem.webkitRequestFullscreen) {
      /* Safari */
      elem.webkitRequestFullscreen();
    } else if (elem.msRequestFullscreen) {
      /* IE11 */
      elem.msRequestFullscreen();
    }
  }

  function disableFullscreen() {
    if (document.exitFullscreen) {
      document.exitFullscreen();
    } else if (document.webkitExitFullscreen) {
      /* Safari */
      document.webkitExitFullscreen();
    } else if (document.msExitFullscreen) {
      /* IE11 */
      document.msExitFullscreen();
    }
  }
  //
</script>
